{"version":3,"sources":["components/Input/Input.js","components/Select/Select.js","utils/utils.js","components/Form/Form.js","components/Results/Results.js","App.js","serviceWorker.js","index.js"],"names":["InputX","styled","input","FormField","div","Input","props","name","label","type","placeholder","defaultValue","value","required","SelectX","select","span","Select","useState","data","setData","getLocations","a","axios","get","then","res","locations","catch","error","console","log","finally","useEffect","map","d","rank","key","id","code","getDayOfWeekArray","searchFrom","searchTo","departureDay","dayOfWeek","parseInt","dayOfWeekArray","day","Date","finalDate","getDay","setDate","getDate","pushDate","moment","getTime","push","format","FormContainer","Title","Suggestion","Button","button","FormGroup","Label","p","Form","onChildSubmit","onFormSubmit","e","preventDefault","loading","FormData","target","dateFrom","dateTo","placeFrom","placeTo","nightsInDest","maxStopOvers","dtimeFrom","dtimeTo","ret_dtimeFrom","ret_dtimeTo","daysDeparture","results","i","length","dayDeparture","noresults","onSubmit","Text","Fly","Routes","Route","Btn","Price","PriceBtn","Results","flights","sort","b","price","className","route","cityFrom","flyFrom","cityTo","flyTo","unix","dTimeUTC","href","deep_link","rel","Body","App","JSON","stringify","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d4a09e1.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst InputX = styled.input`\n    height: 30px;\n    line-height: 30px;\n    border: 1px solid #eee;\n    margin: 0 10px;\n    padding: 0 10px;\n    border-radius: 5px;\n    outline: none;\n`;\n\nconst FormField = styled.div`\n`;\n\nconst Input = (props) => {\n    return (\n        <FormField>\n            <label name={props.name+\"-label\"} >{props.label}</label>\n            <InputX type={props.type} name={props.name} placeholder={props.placeholder} defaultValue={props.value} required />\n        </FormField>\n    )\n}\n\nexport default Input;\n","import React,{ useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst SelectX = styled.select`\n    height: 30px;\n    line-height: 30px;\n    border: 1px solid #eee;\n    margin: 0 10px;\n    border-radius: 5px;\n    outline: none;\n    padding: 0 10px;\n    font-size: 14px;\n    @media screen and (min-width: 40em) {\n        font-size: 20px;\n        height: 40px;\n        line-height: 40px;\n        padding: 0 20px;\n      }\n`;\n\nconst FormField = styled.span`\n`;\n\n\nconst Select = (props) => {\n\n    const [data, setData] = useState([]);\n\n    const getLocations = async () => {\n    \n        axios.get('https://api.skypicker.com/locations?type=box&low_lat=35.469059&low_lon=-13.182548&high_lat=63.576525&high_lon=31.107951&locale=en-US&location_types=city&limit=1000&sort=name&active_only=true&source_popularity=bookings')\n        .then(res => {\n            setData(res.data.locations);\n            // console.log('loc-1: '+JSON.stringify(res.data.locations));\n        })\n        .catch(function (error) {\n            console.log(error);\n        })\n        .finally(function () {\n        });\n    }\n\n    useEffect( () => {\n        getLocations();\n    }, []);\n\n    return (\n        <FormField>\n            <label name={props.name+\"-label\"} >{props.label}</label>\n            <SelectX name={props.name} defaultValue={'MIL'} required >\n                {\n                    data.map((d) => {\n                        if(d.rank <= 7){\n                            // console.log(d.name+\" \"+d.rank);\n                            return <option key={d.id} value={d.code} >{d.name}</option>;\n                        }else{\n                            return false;\n                        }\n                    })\n                }\n            </SelectX>\n        </FormField>\n    )\n}\n\n\n\nexport default Select;\n","import moment from 'moment';\n\n// The function return array that contains all friday in range time search\nexport const getDayOfWeekArray = (searchFrom,searchTo,departureDay) => {\n\n    const dayOfWeek = parseInt(departureDay); //friday is day 5 of week\n    let dayOfWeekArray = [];\n    let day = new Date(searchFrom);\n    const finalDate = new Date(searchTo);\n\n    // Get the first Friday in the month\n    while (day.getDay() !== dayOfWeek) {\n        day.setDate(day.getDate() + 1);\n    }\n    // Get all the other Fridays in range time search\n    while (day <= finalDate) {\n        let pushDate = moment(day.getTime());\n        dayOfWeekArray.push( pushDate.format('DD/MM/YYYY') );\n        day.setDate(day.getDate() + 7);\n    }\n\n    return dayOfWeekArray;\n\n}\n","import React from 'react';\nimport Input from '../Input';\nimport Select from '../Select';\nimport axios from 'axios';\nimport { getDayOfWeekArray } from './../../utils/utils';\nimport styled from 'styled-components';\n\n\n\nconst FormContainer = styled.div`\n  padding: 30px;\n  font-size: 16px;\n  @media screen and (min-width: 40em) {\n    padding: 50px;\n  }\n`;\n\nconst Title = styled.div`\n    font-size: 42px;\n    margin-bottom: 40px;\n    color: #fff;\n    background-color: #d70c7b;\n    padding: 10px;\n    display: inline-block;\n    border-radius: 5px;\n    font-weight: bold;\n`;\n\nconst Suggestion = styled.span`\n    font-size: 12px;\n    color: #444;\n    font-weight: normal;\n    margin-top: -5px;\n    padding-bottom: 5px;\n    display: block;\n`;\n\nconst Button = styled.button`\n  color: #fff;\n  font-size: 16px;\n  border-radius: 5px;\n  display: block;\n  background-color: #d70b7a;\n  width: 140px;\n  height: 40px;\n  line-leight: 40px;\n  cursor: pointer;\n  margin-top: 40px;\n  outline: none;\n`;\n\nconst SelectX = styled.select`\n    height: 30px;\n    line-height: 30px;\n    border: 1px solid #eee;\n    margin: 0 10px;\n    padding: 0 10px;\n    border-radius: 5px;\n    outline: none;\n`;\n\nconst FormGroup = styled.div`\n    display: flex;\n    margin-bottom: 30px;\n    max-width: 407px;\n    justify-content: space-between;\n`;\nconst FormField = styled.div`\n`;\nconst Label = styled.p`\n    font-weight: bold;\n    font-size: 12px;\n    margin-bottom: 5px;\n    color: #000;\n`;\n\n\nconst Form = ( {onChildSubmit} ) => {\n\n    const onFormSubmit = async (e) => {\n        e.preventDefault();\n\n        onChildSubmit({loading : 'Sto cercando voli...'});\n        \n        // Flights search Parameters\n        const data = new FormData(e.target);\n        const dateFrom = data.get('dateFrom');\n        const dateTo = data.get('dateTo');\n        const departureDay = data.get('day');\n        const placeFrom = data.get('placeFrom');\n        const placeTo = data.get('placeTo');\n        let dayDeparture;\n        const nightsInDest = data.get('days');\n        const maxStopOvers = 0;\n        const dtimeFrom = data.get('hFrom');\n        const dtimeTo = data.get('hTo');\n        const ret_dtimeFrom = data.get('ret_hFrom');\n        const ret_dtimeTo = data.get('ret_hTo');\n        const daysDeparture = getDayOfWeekArray(dateFrom,dateTo,departureDay);\n\n        const results = [];\n\n        // Loop of Fly Search in range time\n        for(let i=0; i < daysDeparture.length; i++){\n            dayDeparture = daysDeparture[i];\n            // console.log('https://api.skypicker.com/flights?flyFrom='+placeFrom+'&to='+placeTo+'&dateFrom='+dayDeparture+'&dateTo='+dayDeparture+'&nights_in_dst_from='+nightsInDest+'&nights_in_dst_to='+nightsInDest+'&max_stopovers='+maxStopOvers+'&dtime_from='+dtimeFrom+'&dtime_to='+dtimeTo+'&ret_dtime_from='+ret_dtimeFrom+'&ret_dtime_to='+ret_dtimeTo+'&partner=picky');\n            await axios.get('https://api.skypicker.com/flights?flyFrom='+placeFrom+'&to='+placeTo+'&dateFrom='+dayDeparture+'&dateTo='+dayDeparture+'&nights_in_dst_from='+nightsInDest+'&nights_in_dst_to='+nightsInDest+'&max_stopovers='+maxStopOvers+'&dtime_from='+dtimeFrom+'&dtime_to='+dtimeTo+'&ret_dtime_from='+ret_dtimeFrom+'&ret_dtime_to='+ret_dtimeTo+'&partner=picky')\n            .then(res => {\n\n                console.log('search call: OK');\n\n                // Push all flights in Results[]\n                for(var i in res.data.data) {\n                    results.push(res.data.data[i]);\n                }\n\n            })\n            .catch(function (error) {\n                console.log('error: '+error);\n            })\n            .finally(function () {\n            });\n        }\n\n        // console.log('Results: '+JSON.stringify(results));\n        results.length ? onChildSubmit(results) : onChildSubmit({noresults : 'Non ci sono voli. Prova a cambiare i filtri di ricerca.'});\n\n    }\n\n    return (\n        <FormContainer>\n            <form onSubmit={onFormSubmit} >\n\n                <Title>Trova i migliori voli per i weekend.</Title><br/>\n\n                <Select name=\"placeFrom\" label=\"\" placeholder=\"luogo partenza\" />\n                <Select name=\"placeTo\" label=\"✈\" placeholder=\"luogo arrivo\" />\n                <br/><br/><br/>\n\n                <Label>Periodo in cui sei disposto a partire</Label>\n                <Suggestion>Inserisci un periodo di settimane o mesi nel quale effettuare la ricerca dei voli</Suggestion>\n                <FormGroup>\n                    <Input name=\"dateFrom\" type=\"date\" label=\"dal\" placeholder=\"data inizio\" />\n                    <Input name=\"dateTo\" type=\"date\" label=\"al\" placeholder=\"data fine\" />\n                </FormGroup>\n\n                <Label>Quando vorresti partire</Label>\n                <FormGroup>\n                    <FormField>\n                        <label name=\"day-label\" >Giorno</label>\n                        <SelectX name=\"day\"  defaultValue={5} required>\n                            <option value=\"1\">Lunedì</option>\n                            <option value=\"2\">Martedì</option>\n                            <option value=\"3\">Mercoledì</option>\n                            <option value=\"4\">Giovedì</option>\n                            <option value=\"5\">Venerdì</option>\n                            <option value=\"6\">Sabato</option>\n                            <option value=\"0\">Domenica</option>\n                        </SelectX>\n                    </FormField>\n\n                    <Input name=\"days\" type=\"number\" label=\"Quanti giorni\" placeholder=\"2\" value=\"2\" />\n                </FormGroup>\n\n                <Label>Fascia oraria in cui partire</Label>\n                <FormGroup>\n                    <Input name=\"hFrom\" type=\"time\" label=\"dalle\" placeholder=\"13:00\" value=\"13:00\" />\n                    <Input name=\"hTo\" type=\"time\" label=\"alle\" placeholder=\"14:00\" value=\"14:00\" />\n                </FormGroup>\n\n                <Label>Fascia oraria del ritorno</Label>\n                <FormGroup>\n                    <Input name=\"ret_hFrom\" type=\"time\" label=\"dalle\" placeholder=\"13:00\" value=\"13:00\" />\n                    <Input name=\"ret_hTo\" type=\"time\" label=\"alle\" placeholder=\"14:00\" value=\"14:00\" />\n                </FormGroup>\n\n                <Button>Cerca voli ✈</Button>\n            </form>\n        </FormContainer>\n    )\n\n}\n\n\nexport default Form;\n\n","import React from 'react';\nimport moment from 'moment';\nimport styled from 'styled-components';\n\n\n\n\nconst Text = styled.div`\n  text-align: center;\n  width: 100%;\n  font-size: 24px;\n  padding: 40px 0;\n`;\nconst Fly = styled.div`\n  background-color: yellow;\n  padding: 40px 50px;\n  border-top: 1px solid #d372a7;\n  font-size: 18px;\n  color: #333;\n  @media screen and (min-width: 40em) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\nconst Routes = styled.div`\n  @media screen and (min-width: 40em) {\n    width: 50%;\n  }\n`;\nconst Route = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  justify-content: space-between;\n  @media screen and (min-width: 40em) {\n    > div {\n        flex: 1;\n    }\n  }\n`;\nconst Label = styled.label`\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n  font-size: 12px;\n  color: #000;\n`;\nconst Btn = styled.a`\n    color: #fff;\n    font-size: 16px;\n    border-radius: 5px;\n    display: block;\n    background-color: #d70b7a;\n    cursor: pointer;\n    text-decoration: none;\n    text-align: center;\n    padding: 5px;\n`;\nconst Price = styled.div`\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 10px;\n`;\nconst PriceBtn = styled.div`\n    text-align: center;\n`;\n\n\n\nconst Results = ( {flights} ) => {\n\n    // console.log('flights: '+JSON.stringify(flights));\n\n    if(flights.loading){\n        return (\n            <div>\n                <Text>{flights.loading}</Text>\n            </div>\n        )\n    }\n\n    if(flights.noresults){\n        return (\n            <div>\n                <Text>{flights.noresults}</Text>\n            </div>\n        )\n    }\n\n    return flights.sort( (a, b) => a.price - b.price ).map((d) => {\n        return (\n            <div>\n                <div key={d.id} >\n\n                    <Fly>\n                        <Routes>\n                            <Route>\n                                <div className=\"flight__airport\" >\n                                    <Label>Areoporto</Label> \n                                    { d.route[0].cityFrom }{ d.route[0].flyFrom } ✈ { d.route[0].cityTo }{ d.route[0].flyTo }\n                                </div>\n                                <div className=\"flight__time\" >\n                                    <Label>Giorno&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ora</Label> \n                                    { moment.unix(d.route[0].dTimeUTC).format('DD/MM/YYYY HH:mm') }\n                                </div>\n                            </Route>\n\n                            <Route>\n                                <div className=\"flight__airport\" >\n                                    <Label>Areoporto</Label> \n                                    { d.route[1].cityFrom }{ d.route[1].flyFrom } ✈ { d.route[1].cityTo }{ d.route[1].flyTo }\n                                </div>\n                                <div className=\"flight__time\" >\n                                <Label>Giorno&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ora</Label> \n                                { moment.unix(d.route[1].dTimeUTC).format('DD/MM/YYYY HH:mm') }\n                                </div>\n                            </Route>\n                        </Routes>\n\n                        <PriceBtn>\n                            <Price className=\"flight__price\" >{ d.price }€</Price>\n                            <Btn className=\"flight__link\" href={ d.deep_link } target=\"_blank\" rel=\"noopener noreferrer\" >GO!</Btn>\n                        </PriceBtn>\n                    </Fly>\n\n                </div>\n            </div>\n        )\n    })\n                    \n}\n\n\nexport default Results;\n","import React, {useState} from 'react';\nimport Form from './components/Form';\nimport Results from './components/Results';\nimport styled from 'styled-components';\n\n\n\nconst Body = styled.div`\n  background-color: yellow;\n  min-height: 100vh;\n  font-family: 'Roboto', sans-serif;\n`;\n\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n\n  const handleChildSubmit = (data) => {\n    setData(data);\n    console.log('APP: '+JSON.stringify(data));\n  }\n\n  return (\n    <Body>\n      <Form onChildSubmit={handleChildSubmit} />\n      <Results flights={data} />\n    </Body>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}